{
  title: "Componentes en Svelte"
  bases: { component }
  children: { 
    svelte-component-props
    svelte-component-styling
    svelte-component-lifecycle
    svelte-component-data
    svelte-component-events
    svelte-component-call
    svelte-component-logic
    svelte-component-bind
  }
}

@text[[[

Los componentes en Svelte se definen en ficheros @code{.svelte}, y los ficheros son
en formato HTML con 2 tipos de tags especiales.
@olist{
  @{En los tags @code{<script>} se puede poner código Javascript.}
  @{En los tags @minidosis(svelte-component-styling){@code{ <style>}} se puede poner CSS.}
}
Esto hace que un componente sea autocontenido.

Los componentes:
@ulist{
  @{tienen @minidosis(svelte-component-props){propiedades} (o @em{props}),}
  @{tienen @minidosis(svelte-component-data){datos internos},}
  @{pueden definir @minidosis(svelte-component-styling){estilos propios},}
  @{se pueden @minidosis(svelte-component-call){llamar entre ellos},}
  @{definen una @minidosis(svelte-component-logic){lenguaje específico} para la generación condicional e iterativa del HTML,}
  @{permiten @minidosis(svelte-component-bind){asociar variables} con elementos DOM de tipo @code{<input>}.}
  @{pueden @minidosis(svelte-component-events){detectar eventos},}
  @{tienen funciones asociadas al @minidosis(svelte-component-lifecycle){ciclo de vida},}
}

]]]


